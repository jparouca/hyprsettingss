{"ast":null,"code":"import { os } from \"@neutralinojs/lib\";\nexport async function getHyprValue(name, type) {\n  try {\n    const res = await os.execCommand(`hyprctl getoption -j ${name}`);\n    const data = JSON.parse(res.stdOut);\n    return type === 'int' ? data.int : data.float;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\nexport async function setHyprValue(name, value) {\n  try {\n    await os.execCommand(`hyprctl --batch \"keyword ${name} ${value}\"`);\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"names":["os","getHyprValue","name","type","res","execCommand","data","JSON","parse","stdOut","int","float","error","console","log","setHyprValue","value"],"sources":["/home/jparouca/projects/hyprsettings-vite/react-src/src/utils/hyprctl.js"],"sourcesContent":["import { os } from \"@neutralinojs/lib\";\n\nexport async function getHyprValue(name, type) {\n  try {\n    const res = await os.execCommand(`hyprctl getoption -j ${name}`);\n    const data = JSON.parse(res.stdOut);\n    return type === 'int' ? data.int : data.float;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n}\n\nexport async function setHyprValue(name, value) {\n  try {\n    await os.execCommand(`hyprctl --batch \"keyword ${name} ${value}\"`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,mBAAmB;AAEtC,OAAO,eAAeC,YAAYA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAC7C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,EAAE,CAACK,WAAW,CAAE,wBAAuBH,IAAK,EAAC,CAAC;IAChE,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,GAAG,CAACK,MAAM,CAAC;IACnC,OAAON,IAAI,KAAK,KAAK,GAAGG,IAAI,CAACI,GAAG,GAAGJ,IAAI,CAACK,KAAK;EAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,IAAI;EACb;AACF;AAEA,OAAO,eAAeG,YAAYA,CAACb,IAAI,EAAEc,KAAK,EAAE;EAC9C,IAAI;IACF,MAAMhB,EAAE,CAACK,WAAW,CAAE,4BAA2BH,IAAK,IAAGc,KAAM,GAAE,CAAC;EACpE,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}