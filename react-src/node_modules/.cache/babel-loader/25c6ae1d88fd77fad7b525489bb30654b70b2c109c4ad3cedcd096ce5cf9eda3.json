{"ast":null,"code":"var _jsxFileName = \"/home/jparouca/projects/hyprsettings-vite/react-src/src/components/Settings.jsx\";\nimport { Slider } from \"./Slider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IInputMethod = {\n  bool: _ref => {\n    let {\n      name,\n      defaultValue\n    } = _ref;\n    /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select select-bordered select-sm w-full max-w-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        disabled: true,\n        selected: true,\n        children: \"False\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"True\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this);\n  },\n  int: _ref2 => {\n    let {\n      name,\n      defaultValue\n    } = _ref2;\n    /*#__PURE__*/_jsxDEV(Slider, {\n      defaultValue: defaultValue,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this);\n  },\n  float: _ref3 => {\n    let {\n      name,\n      defaultValue\n    } = _ref3;\n    /*#__PURE__*/_jsxDEV(Slider, {\n      defaultValue: defaultValue,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this);\n  },\n  text: _ref4 => {\n    let {\n      placeholder = \"default\"\n    } = _ref4;\n    /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type here\",\n      className: \"input input-bordered input-xs w-full max-w-xs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this);\n  }\n};\nexport const Settings = _ref5 => {\n  let {\n    title,\n    name,\n    description,\n    type,\n    defaultValue\n  } = _ref5;\n  const InputMethod = IInputMethod[type];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card card-compact w-28 md:w-40 lg:w-96 lg:card-side bg-base-100 mx-4 txt-neutral-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-sm card-title justify-center items-center\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"italic text-xs text-start\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), InputMethod && /*#__PURE__*/_jsxDEV(InputMethod, {\n        name: name,\n        defaultValue: defaultValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-actions justify-end mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge badge-outline badge-sm\",\n          children: name.split(\":\")[0].toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["Slider","jsxDEV","_jsxDEV","IInputMethod","bool","_ref","name","defaultValue","className","children","disabled","selected","fileName","_jsxFileName","lineNumber","columnNumber","int","_ref2","float","_ref3","text","_ref4","placeholder","type","Settings","_ref5","title","description","InputMethod","split","toUpperCase","_c","$RefreshReg$"],"sources":["/home/jparouca/projects/hyprsettings-vite/react-src/src/components/Settings.jsx"],"sourcesContent":["import { Slider } from \"./Slider\";\n\n\nconst IInputMethod = {\n  bool: ({ name, defaultValue }) => {\n    <select className=\"select select-bordered select-sm w-full max-w-xs\">\n      <option disabled selected>False</option>\n      <option>True</option>\n    </select>\n  },\n  int: ({ name, defaultValue }) => {\n    <Slider defaultValue={defaultValue} name={name} />\n  },\n  float: ({ name, defaultValue }) => {\n    <Slider defaultValue={defaultValue} name={name} />\n  },\n  text: ({ placeholder = \"default\" }) => {\n    <input type=\"text\" placeholder=\"Type here\" className=\"input input-bordered input-xs w-full max-w-xs\" />\n  },\n};\n\nexport const Settings = ({ title, name, description, type, defaultValue }) => {\n  const InputMethod = IInputMethod[type];\n  return (\n    <div className=\"card card-compact w-28 md:w-40 lg:w-96 lg:card-side bg-base-100 mx-4 txt-neutral-content\">\n      <div className=\"card-body text-center\">\n        <h2 className=\"text-sm card-title justify-center items-center\">{title}</h2>\n        <p className=\"italic text-xs text-start\" >{description}</p>\n        {InputMethod && <InputMethod name={name} defaultValue={defaultValue} />}\n        <div className=\"card-actions justify-end mt-4\">\n          <div className=\"badge badge-outline badge-sm\">{name.split(\":\")[0].toUpperCase()}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}